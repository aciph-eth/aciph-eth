name: Generate and publish contribution snake

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Snake SVG
        uses: Platane/snk@v3
        with:
          github_user_name: aciph-eth
          svg_out_path: dist/snake.svg

      - name: Verify generated SVG exists
        run: |
          set -eo pipefail
          echo "Files in workspace root:"
          ls -la
          echo "Files in dist/:"
          ls -la dist || true
          if [ ! -f dist/snake.svg ]; then
            echo "ERROR: dist/snake.svg not found"
            exit 1
          fi
          echo "Found dist/snake.svg (size):"
          wc -c dist/snake.svg

      - name: Create public/ with inlined SVG
        run: |
          set -eo pipefail
          mkdir -p public
          # write simple header
          printf '%s\n' '<!doctype html>' '<html>' '<head><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Contribution snake</title></head>' '<body>' > public/index.html
          # strip possible XML declaration from SVG then append
          if sed -n '1p' dist/snake.svg | grep -q '^<\?xml'; then
            sed '1d' dist/snake.svg >> public/index.html
          else
            cat dist/snake.svg >> public/index.html
          fi
          printf '%s\n' '</body>' '</html>' >> public/index.html
          cp -f dist/snake.svg public/snake.svg
          echo "public/ contains:"
          ls -la public

      - name: Publish public/ to branch output
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: output
